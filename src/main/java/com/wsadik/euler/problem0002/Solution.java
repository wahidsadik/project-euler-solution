package com.wsadik.euler.problem0002;

import java.util.*;
import java.util.stream.*;
import java.util.function.*;
import one.util.streamex.*;

/**
  Link: https://projecteuler.net/problem=2

  Even Fibonacci numbers

  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Solution {

  public static void main(String[] args) {
    Solution solution = new Solution();
    System.out.println(solution.solve(Long.parseLong(args[0])));
  }

  public long solve(long sentinel) {
    LongStreamEx fibGenerator = StreamEx.iterate(
      new long[] { 1L, 1L }, a -> new long[] {
        a[1], a[0] + a[1]
      })
      .mapToLong(a -> a[1]);

    return fibGenerator
      .takeWhile(n -> n <= sentinel)
      .filter(n -> n % 2 == 0)
      .sum();
  }

}
